:root {
    --turquoise: #7EDDDE;
    --orange: #FFA40D;
    --green: #009C49;
    --purple: #A77AD7;
}

.container {
    position: relative;
    height: 100vh;
    width: 100%;
    background-color: #faf9f6;
    overflow: hidden;
}

/* Sticky note pattern background */
.container::before {
    content: '';
    position: absolute;
    inset: 0;
    background-color: white;
    /* Veel clusters, elk in een cirkelvormig patroon */
    background-image:
        /* Cluster 1 */
        linear-gradient(to bottom, #BDE6E4 0 0), linear-gradient(to bottom, #C7ECEB 0 0), linear-gradient(to bottom, #D5F4F3 0 0), linear-gradient(to bottom, #A8DEDD 0 0), linear-gradient(to bottom, #B3E9E7 0 0), linear-gradient(to bottom, #D8F6F5 0 0), linear-gradient(to bottom, #C0EDEA 0 0), linear-gradient(to bottom, #C9F0EF 0 0), linear-gradient(to bottom, #DFFBFA 0 0),
        /* Cluster 2 */
        linear-gradient(to bottom, #E7FDFC 0 0), linear-gradient(to bottom, #C2EBE9 0 0), linear-gradient(to bottom, #B0DFDD 0 0), linear-gradient(to bottom, #D1F5F4 0 0), linear-gradient(to bottom, #C9F1F0 0 0), linear-gradient(to bottom, #A8DEDD 0 0), linear-gradient(to bottom, #B3E9E7 0 0), linear-gradient(to bottom, #D8F6F5 0 0),
        /* Cluster 3 */
        linear-gradient(to bottom, #C0EDEA 0 0), linear-gradient(to bottom, #C7ECEB 0 0), linear-gradient(to bottom, #D5F4F3 0 0), linear-gradient(to bottom, #E7FDFC 0 0), linear-gradient(to bottom, #C2EBE9 0 0), linear-gradient(to bottom, #B0DFDD 0 0), linear-gradient(to bottom, #D1F5F4 0 0), linear-gradient(to bottom, #C9F1F0 0 0),
        /* Cluster 4 */
        linear-gradient(to bottom, #BDE6E4 0 0), linear-gradient(to bottom, #C7ECEB 0 0), linear-gradient(to bottom, #D5F4F3 0 0), linear-gradient(to bottom, #A8DEDD 0 0), linear-gradient(to bottom, #B3E9E7 0 0), linear-gradient(to bottom, #D8F6F5 0 0), linear-gradient(to bottom, #C0EDEA 0 0), linear-gradient(to bottom, #C9F0EF 0 0),
        /* Cluster 5 */
        linear-gradient(to bottom, #DFFBFA 0 0), linear-gradient(to bottom, #E7FDFC 0 0), linear-gradient(to bottom, #C2EBE9 0 0), linear-gradient(to bottom, #B0DFDD 0 0), linear-gradient(to bottom, #D1F5F4 0 0), linear-gradient(to bottom, #C9F1F0 0 0), linear-gradient(to bottom, #A8DEDD 0 0), linear-gradient(to bottom, #B3E9E7 0 0),
        /* Cluster 6 */
        linear-gradient(to bottom, #C7ECEB 0 0), linear-gradient(to bottom, #D5F4F3 0 0), linear-gradient(to bottom, #E1FAF9 0 0), linear-gradient(to bottom, #D0F1F0 0 0), linear-gradient(to bottom, #A8DEDD 0 0), linear-gradient(to bottom, #B3E9E7 0 0), linear-gradient(to bottom, #D8F6F5 0 0),
        /* Cluster 7 */
        linear-gradient(to bottom, #C0EDEA 0 0), linear-gradient(to bottom, #C9F0EF 0 0), linear-gradient(to bottom, #DFFBFA 0 0), linear-gradient(to bottom, #E7FDFC 0 0), linear-gradient(to bottom, #C2EBE9 0 0), linear-gradient(to bottom, #B0DFDD 0 0),
        /* Cluster 8 */
        linear-gradient(to bottom, #D1F5F4 0 0), linear-gradient(to bottom, #C9F1F0 0 0), linear-gradient(to bottom, #A8DEDD 0 0), linear-gradient(to bottom, #B3E9E7 0 0), linear-gradient(to bottom, #D8F6F5 0 0),
        /* Cluster 9 */
        linear-gradient(to bottom, #C0EDEA 0 0), linear-gradient(to bottom, #C7ECEB 0 0), linear-gradient(to bottom, #D5F4F3 0 0), linear-gradient(to bottom, #E7FDFC 0 0),
        /* Cluster 10 */
        linear-gradient(to bottom, #C2EBE9 0 0), linear-gradient(to bottom, #B0DFDD 0 0), linear-gradient(to bottom, #D1F5F4 0 0), linear-gradient(to bottom, #C9F1F0 0 0);
    background-size:
        15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px,
        15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px,
        15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px,
        15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px,
        15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px,
        15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px, 15px 15px,
        15px 15px, 15px 15px;
    background-position:
        /* Cluster 1 */
        50px 50px, 50px 35px, 50px 65px, 35px 50px, 65px 50px, 35px 35px, 65px 35px, 35px 65px, 65px 65px,
        /* Cluster 2 */
        200px 100px, 200px 85px, 200px 115px, 185px 100px, 215px 100px, 185px 85px, 215px 85px, 185px 115px,
        /* Cluster 3 */
        400px 80px, 400px 65px, 400px 95px, 385px 80px, 415px 80px, 385px 65px, 415px 65px, 385px 95px, 415px 95px,
        /* Cluster 4 */
        600px 350px, 600px 335px, 600px 365px, 585px 350px, 615px 350px, 585px 335px, 615px 335px, 585px 365px, 615px 365px,
        /* Cluster 5 */
        80vw 80vh, calc(80vw + 15px) calc(80vh + 0px), calc(80vw + 30px) calc(80vh + 0px), 80vw calc(80vh + 15px), calc(80vw + 15px) calc(80vh + 15px), calc(80vw + 30px) calc(80vh + 15px), 80vw calc(80vh + 30px), calc(80vw + 15px) calc(80vh + 30px),
        /* Cluster 6 */
        100px 600px, 100px 615px, 100px 585px, 85px 600px, 115px 600px, 85px 615px, 115px 615px,
        /* Cluster 7 */
        900px 200px, 900px 215px, 900px 185px, 885px 200px, 915px 200px, 885px 215px,
        /* Cluster 8 */
        300px 500px, 315px 500px, 285px 500px, 300px 485px, 300px 515px,
        /* Cluster 9 */
        700px 100px, 715px 100px, 685px 100px, 700px 85px,
        /* Cluster 10 */
        500px 400px, 515px 400px, 485px 400px, 500px 415px;
    background-repeat: no-repeat;
    z-index: 0;
    pointer-events: none;
    opacity: 1;
}

/* Verwijder de schaduw effecten */
.container::after {
    display: none;
}

.pixelGrid {
    position: absolute;
    inset: 0;
    background-image: 
        linear-gradient(to right, rgba(255, 255, 255, 0.1) 1px, transparent 1px),
        linear-gradient(to bottom, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
    background-size: 50px 50px; /* Larger grid size */
    opacity: 0.5;
}

.answersLayer {
    position: absolute;
    inset: 0;
    z-index: 3;
    padding: 80px;
}

.answersGrid {
    width: 100%;
    height: 100%;
    padding: 4rem;
    position: relative;
}

/* Update container and grid layout */
.container {
    position: relative;
    height: 100vh;
    width: 100%;
    background-color: white;
    overflow: hidden;
}

/* Update grid lines to be a background element */
.gridLines {
    position: absolute;
    inset: 0;
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    padding: 80px;
    z-index: 1;
}

.gridLines::before {
    content: '';
    position: absolute;
    left: 50%;
    top: 80px;
    bottom: 80px;
    width: 1px;
    background: rgba(0, 0, 0, 0.1);
}

.gridLines::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 80px; 
    right: 80px;
    height: 1px;
    background: rgba(0, 0, 0, 0.1);
}

/* Update the axis labels */
.axisLabel {
    position: absolute;
    color: #333;
    font-size: 14px;
    font-weight: 500;
    z-index: 2;
    text-align: center;
    white-space: pre-line;
    line-height: 1.4;
    width: 100%;
}

.labelTop {
    top: 40px;
    left: 50%;
    transform: translateX(-50%);
}

.labelBottom {
    bottom: 80px;
    left: 50%;
    transform: translateX(-50%);
}

.labelLeft, .labelRight {
    position: absolute;
    top: 50%;
    transform-origin: center;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 200px;
    width: 120px;
    text-align: center;
}

.labelLeft {
    transform: translateY(-50%);
    left: 40px;
}

.labelRight {
    transform: translateY(-50%);
    right: 40px;
}

.answerItem {
    position: relative;
    width: 3rem; 
    height: 3rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    z-index: 5;
    animation: float 12s ease-in-out infinite;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

/* Voeg verschillende animatie-timings toe voor elk item */
.answerItem:nth-child(2n) {
    animation-duration: 13s;
    animation-delay: 2s;
}

.answerItem:nth-child(3n) {
    animation-duration: 14s;
    animation-delay: 4s;
}

.answerItem:nth-child(4n) {
    animation-duration: 12.5s;
    animation-delay: 6s;
}

.answerItem:nth-child(5n) {
    animation-duration: 13.5s;
    animation-delay: 8s;
}

@keyframes float {
    0% {
        transform: translate(-50%, -50%) translate(0px, 0px) scale(1);
    }
    25% {
        transform: translate(-50%, -50%) translate(-1px, -3px) scale(1.08);
    }
    50% {
        transform: translate(-50%, -50%) translate(0px, -4px) scale(1);
    }
    75% {
        transform: translate(-50%, -50%) translate(1px, -3px) scale(0.92);
    }
    100% {
        transform: translate(-50%, -50%) translate(0px, 0px) scale(1);
    }
}

.answerItem:hover {
    transform: translate(-50%, -50%) scale(1.2);
    z-index: 10;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.25);
}

.answerText {
    position: relative;
    z-index: 2;
    color: white;
    mix-blend-mode: exclusion;
    font-size: 0.4rem;
    font-weight: 500;
    text-align: center;
    padding: 0.5rem;
}


/* Add hover effects */
.answerItem:hover::before {
    opacity: 0.25;
    transform: scale(1.1);
    filter: blur(2px);
}

/* Add rotation animation */
@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

.questionItem:hover:not(.inactiveQuestion) {
    transform: scale(1.1);
    z-index: 20;
}

.inactiveQuestion {
    opacity: 0;
    transform: scale(0.8);
    pointer-events: none;
    transition: all 0.5s ease;
}

.zoomTransition {
    position: fixed;
    transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
    transform-origin: center center;
}

.zoomedIn {
    transform: scale(1.5) translateZ(500px);
}

.zoomedOut {
    transform: scale(0.1) translateZ(-1000px);
}

.questionText {
    padding: 0.5rem;
    text-align: center;
    color: white;
    font-size: 0.7rem; /* Smaller font size for smaller bubbles */
    font-weight: 500;
    z-index: 1;
}

.glowEffect {
    position: absolute;
    inset: 0;
    border-radius: 50%;
    filter: blur(0.5rem);  /* Reduced blur */
    opacity: 0.6;  /* Reduced opacity */
    transition: opacity 0.3s ease;
    background: rgba(255, 255, 255, 0.18);
    /* border-radius: 16px; */
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
    /* backdrop-filter: blur(7.9px); */
    -webkit-backdrop-filter: blur(7.9px);
    border: 1px solid rgba(255, 255, 255, 0.35);
}

.questionItem:hover .glowEffect {
    opacity: 0.7;
}

/* Modal Overlay */
.overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.75);
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
    z-index: 1000; /* Much higher z-index */
}

.overlay.visible {
    opacity: 1;
    visibility: visible;
}

.contentWrapper {
    position: relative;
    width: 90%;
    max-width: 1200px;
    height: 80vh;
    z-index: 1001; /* Even higher than overlay */
}

.backButton {
    position: absolute;
    top: 2rem;
    left: 2rem;
    padding: 0.75rem 1.5rem;
    background: rgba(255, 255, 255, 0.1);
    color: white;
    border: none;
    border-radius: 0.75rem;
    display: flex;
    align-items: center;
    backdrop-filter: blur(8px);
    transition: all 0.3s ease;
    font-weight: 500;
    z-index: 50;
    cursor: pointer;
}

.backButton:hover {
    background: rgba(255, 255, 255, 0.2);
}

.activeQuestion {
    width: 14rem;
    height: 14rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem;
    text-align: center;
    color: white;
    font-weight: 500;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    z-index: 30;
    transform: scale(1.2);
}

.answerBox {
    position: absolute;
    width: 17rem;
    height: 16rem;
    padding: 1.5rem;
    color: white;
    text-align: center;
    transition: all 0.3s ease;
    border-radius: 0.5rem;
    transform-origin: center center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    overflow: auto;
}

.answerBox::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
            135deg,
            rgba(255, 255, 255, 0.4) 0%,
            transparent 50%,
            rgba(0, 0, 0, 0.05) 100%
    );
    pointer-events: none;
}

.answerBox:hover {
    transform: scale(1.1) rotate(0deg) translate(-50%, -50%) !important;
    z-index: 40;
    box-shadow: 0 0 40px var(--hover-color), inset 0 0 40px var(--hover-color);
}

/* Animation for answer transitions */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: scale(0.8);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

.pageContainer {
    animation: fadeIn 0.5s ease forwards;
}

@keyframes wave {
    0% {
        transform: translate(0, 0);
    }
    50% {
        transform: translate(5px, -5px);
    }
    100% {
        transform: translate(0, 0);
    }
}

.entering {
    transform: scale(1);
    opacity: 1;
}

.leaving {
    transform: scale(0.8);
    opacity: 0;
}
.enteringQuestions {
    opacity: 1;
}

.leavingQuestions {
    opacity: 0;
}

.visible {
    opacity: 1;
    visibility: visible;
}

/* General zoom transition settings */
.zoomTransition {
    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
    transform-origin: center center;
}

.zoomIn {
    transform: scale(1.1);
    opacity: 1;
}

.zoomOut {
    transform: scale(1);
    opacity: 0.7;
}

/* For better handling of zooming, you can also add transform behavior */
.zoomTransition.zoomIn {
    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
}

.zoomTransition.zoomOut {
    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
}

/* Updated pagination animation keyframes */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.8);
    }
    to {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
    to {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.8);
    }
}

/* Timeline component */
.timeline {
    position: absolute;
    bottom: 20px;
    left: 0;
    right: 0;
    height: 40px;
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    padding: 0 60px;
    z-index: 4;
}

/* Create one continuous line behind all timeline points */
.timeline::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 11%; 
    right: 11%; 
    height: 1px;
    background-color: rgba(0, 0, 0, 0.3);
    transform: translateY(-50%);
    z-index: 1;
}

.timelinePoint {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: white;
    border: 1px solid rgba(0, 0, 0, 0.3); /* Thinner, more transparent border */
    position: relative;
    z-index: 2;
    cursor: pointer;
    transition: transform 0.2s ease, background-color 0.2s ease;
}

/* Active state for timeline points */
.timelinePoint.active {
    background-color: #000000; /* Solid black */
    transform: scale(1.2);
    box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);
}

.timelinePoint:hover {
    transform: scale(1.2);
}

.timelineMonth {
    font-size: 14px;  /* Match the axis label font size */
    color: #333;      /* Match the axis label color */
    font-weight: 500; /* Match the axis label font weight */
    margin-top: 5px;
    text-align: center;
}

/* Style for the current month */
.timelineMonth.current {
    font-weight: 600;
    color: #000;
}

.timelineItem {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 6px;
    cursor: pointer;
    flex: 1;
    margin-top: 14px;
}

/* Remove the individual line segments from each timeline item */
.timelineItem:not(:last-child)::after {
    display: none;
}

/* Add this to ensure responsiveness */
@media (max-width: 768px) {
    .timeline {
        padding: 0 30px;
    }
    
    .timeline::after {
        left: 30px;
        right: 30px;
    }
    
    .timelineMonth {
        font-size: 0.7rem;
    }
}

@media (max-width: 480px) {
    .timelinePoint {
        width: 8px;
        height: 8px;
    }
    
    .timelineMonth {
        font-size: 0.65rem;
    }
}

/* Optional: Add a subtle pulse effect for active point */
@keyframes subtlePulse {
    0% {
        box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2);
    }
    70% {
        box-shadow: 0 0 0 4px rgba(0, 0, 0, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(0, 0, 0, 0);
    }
}

.timelinePoint.active {
    animation: subtlePulse 2s infinite;
}

/* Language selector styles */
.languageSelector {
    position: absolute;
    right: 20px;
    bottom: 20px;
    z-index: 50;
    font-weight: 500;
}

.languageToggle {
    background-color: rgba(255, 255, 255, 0.2);
    color: #fff;
    padding: 5px 10px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
    backdrop-filter: blur(5px);
    display: flex;
    align-items: center;
    user-select: none;
}

.languageToggle::after {
    content: "▼";
    font-size: 8px;
    margin-left: 5px;
    margin-top: 2px;
}

.languageDropdown {
    position: absolute;
    top: 100%;
    right: 0;
    background-color: rgba(20, 20, 20, 0.9);
    border-radius: 4px;
    margin-top: 5px;
    overflow: hidden;
    width: 100%;
    min-width: 70px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}

.languageOption {
    padding: 8px 10px;
    cursor: pointer;
    color: #fff;
    text-align: center;
}

.languageOption:hover {
    background-color: rgba(255, 255, 255, 0.1);
}

.languageOption.active {
    background-color: rgba(255, 255, 255, 0.15);
    font-weight: 600;
}